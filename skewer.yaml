title: Accessing an FTP server using Skupper
subtitle: Securely connect to an FTP server on a remote Kubernetes cluster
github_actions_url: https://github.com/skupperproject/skupper-example-ftp/actions/workflows/main.yaml
overview: |
  This example shows you how you can use Skupper to connect an FTP
  client on one Kubernetes cluster to an FTP server on another.

  It demonstrates use of Skupper with multi-port services such as FTP.
  It uses FTP in passive mode (which is more typical these days) and a
  [restricted port range][ports] that simplifies Skupper
  configuration.

  [ports]: https://github.com/skupperproject/skupper-example-ftp/blob/main/ftp-server/kubernetes.yaml#L25-L28
sites:
  west:
    kubeconfig: ~/.kube/config-west
    namespace: west
  east:
    kubeconfig: ~/.kube/config-east
    namespace: east
steps:
  - standard: configure_separate_console_sessions
  - standard: access_your_clusters
  - standard: set_up_your_namespaces
  - standard: install_skupper_in_your_namespaces
  - standard: check_the_status_of_your_namespaces
  - standard: link_your_namespaces
  - title: Deploy the FTP server
    preamble: |
      In the east namespace, use `kubectl apply` to deploy the FTP
      server.
    commands:
      east:
        - run: kubectl apply -f ftp-server
          output: deployment.apps/ftp-server created
  - title: Expose the FTP server
    preamble: |
      In the east namespace, use `skupper expose` to expose the FTP
      server on all linked sites.
    commands:
      east:
        - await: deployment/ftp-server
        - run: skupper expose deployment/ftp-server --port 21100 --port 21
          output: deployment ftp-server exposed as ftp-server
  - title: Run the FTP client
    preamble: |
      In the west namespace, use `kubectl run` and the `curl` image to
      perform FTP put and get operations.
    commands:
      west:
        - await: service/ftp-server
        - run: echo "Hello!" | kubectl run ftp-client --stdin --rm --image=docker.io/curlimages/curl --restart=Never -- -s -T - ftp://example:example@ftp-server/greeting
          output: pod "ftp-client" deleted
        - run: kubectl run ftp-client --attach --rm --image=docker.io/curlimages/curl --restart=Never -- -s ftp://example:example@ftp-server/greeting
          output: |
            Hello!
            pod "ftp-client" deleted
  - standard: accessing_the_web_console
  - standard: cleaning_up
    commands:
      west:
        - run: skupper delete
      east:
        - run: skupper delete
        - run: kubectl delete deployment/ftp-server
